/**
 * 변수 호이스팅
 * var 키워드로 변수를 선언하면 변수 호이스팅에 따라 변수 선언이 스코프의 상단으로 끌어올려진것처럼 동작합니다.
 * 즉 변수 호이스팅에 의해 var키워드로 선언한 변수는 변수 선언문 이전에 참조할 수 있다. 단 이전의 변수를 참조하면 undefined를 반환
 */

console.log(foo); // 이전의 변수를 참조할 경우 undefined를 반환함.

foo = 300;

console.log(foo); // 호이스팅 이후 변수 foo에 값을 할당했기 때문에 할당된 값이 반환된다.

var foo; // 변수 호이스팅 발생(런타임 이전에 실행함. undefined로 초기화 시킴.)

/**
 * var는 중복 선언이 가능
 * let은 중복 선언이 불가능
 *
 * var는 변수 호이스팅시(런타임 이전 단계) 변수 선언 단계와 초기화 단계(undefined)가 동시에 일어남, 비로소 변수 할당문에 도착해서야 값이 할당됨.
 * - 선언 단계와 초기화 단계가 한번에 진행
 * let은 변수 호이스팅시 변수 선언 단계와 초기화 단계가 분리되서 진행됨. 변수할당문에 도착해서야 초기화가 일어남.
 * - 선언 단계는 먼저 실행되나, 초기화 단계는 변수 할당문에 도착해서 실행함.
 */

console.log(num); // Cannot access 'num' before initialization
let num;
