/**
 * 화살표 함수 (arrow function)
 * ex) () => {}
 * 기존 함수 정의보다 간단하게 정의가 가능함.
 * ES6이후 지원되는 방식
 * 기존 함수 내 this를 해결하기 위한 대안으로 유용함.
 *
 * 매개변수가 1개인 경우 소괄호를 생략 할 수 있음. 0개 또는 n개 (n > 1)는 반드시 소괄호를 사용해야함.
 */

const multiply = (a, b) => {
    return a * b;
};

console.log(multiply(3, 5));

// 매개변수 1개인 경우 소괄호 생략 가능.
// 만약 함수몸체가 하나의 문으로 구성되어 있으면, 중괄호를 생략할 수 있음. 하나 이상의 문이 올 경우 중괄호를 감싸야함.
// 만약 하나의 문으로 구성되어도, 표현식(값으로 평가될 수 있는 문)이 아니면 중괄호를 생략할 수 없다.
const pow = (n) => n ** n; // 거듭 제곱 (지수 연산자) ES2017이후에 지원함.

console.log(pow(5));

Array.prototype.sum = function () {
    return this.reduce((prev, current) => prev + current, 0);
};

console.log([1, 2, 3, 4, 5].sum());

// 함수 몸통에 표현식이 아닌 문이 있는 경우 반드시 중괄호로 감싸야함.
// eslint-disable-next-line no-unused-vars
const arrow = () => {
    const x = 10; /* 선언문 */
    return x; // 표현식이 아닌 문은 반환할 수 없기 때문에 중괄호 제거가 불가능함.
    // 중괄호가 있는 경우 반환값을 명시해야 한다.
};

// 화살표 함수는 즉시 실행 함수로 사용 가능함.
// 화살표 함수도 일반 함수처럼 일급객체이므로, 함수의 인자로 전달 가능하고, 함수 내 반환값으로 사용된다.(일급객체는 값처럼 사용할 수 있음.)
